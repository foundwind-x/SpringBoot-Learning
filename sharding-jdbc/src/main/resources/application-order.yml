spring:
  shardingsphere:
    sharding:
      ###数据库默认分库策略###
      default-database-strategy:
        #inline-行表达式分片(也属于单分片键的标准分片的一种)
        inline:
          #分片列名称（字段名称）
          sharding-column: user_id
          algorithm-expression: db$->{user_id % 3}
        #standard-用于单分片键的标准分片场景
#        standard:
#          sharding-column: user_id
#          #精确分片算法类名称，用于=和IN。该类需实现PreciseShardingAlgorithm接口并提供无参数的构造器
#          precise-algorithm-class-name: XXClassName
#          #范围分片算法类名称，用于BETWEEN，可选。该类需实现RangeShardingAlgorithm接口并提供无参数的构造器
#          range-algorithm-class-name: XXClassName
      #绑定的表
      binding-tables: t_order,t_order_item
      #配置单个表的策略
      tables:
        #逻辑表名
        t_order:
          actual-data-nodes: db$->{0..2}.t_order_$->{0..1}
          #该表的分表策略
          table-strategy:
            inline:
              #分片字段
              sharding-column: order_id
              algorithm-expression: t_order_$->{order_id % 2}
          # 单独指定该表的分库策略
          database-strategy:
            inline:
              # 分片字段
              sharding-column: user_id
              algorithm-expression: db$->{user_id % 3}
        #逻辑表名
        t_order_item:
          actual-data-nodes: db$->{0..2}.t_order_item_$->{0..1}
          #该表的分表策略
          table-strategy:
            inline:
              #分片字段
              sharding-column: order_id
              algorithm-expression: t_order_item_$->{order_id % 2}
          #主键的生成策略（用于单分片键的标准分片场景）
          key-generator:
            #主键名称
            column: order_item_id
            #自增列值生成器类型，缺省表示使用默认自增列值生成器。可使用用户自定义的列值生成器或选择内置类型：SNOWFLAKE/UUID
            type: SNOWFLAKE
      # 默认主键生成策略
#      default-key-generator:
#        type: SNOWFLAKE
#        props:
#          worker:
#            id: 123
    ###  数据源配置 ###
    datasource:
      # 总库
      names: db0,db1,db2
      # 数据源
      db0:
        jdbc-url: jdbc:mysql://10.201.15.46:3306/db0?useUnicode=true&characterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: 123456
        type: com.zaxxer.hikari.HikariDataSource #com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
      db1:
        jdbc-url: jdbc:mysql://10.201.15.46:3306/db1?useUnicode=true&characterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: 123456
        type: com.zaxxer.hikari.HikariDataSource #com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
      db2:
        jdbc-url: jdbc:mysql://10.201.15.46:3306/db2?useUnicode=true&characterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: 123456
        type: com.zaxxer.hikari.HikariDataSource #com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
    ### 属性 ###
    props:
      # 打印sql
      sql.show: true
      check:
        table:
          metadata:
            # 是否在启动时检查分表元数据一致性
            enabled: false

#mybatis plus 设置
mybatis-plus:
  mapper-locations: classpath*:com/fz/boot/sharding/**/xml/*Mapper.xml
  global-config:
    db-config:
      field-strategy: not_null
